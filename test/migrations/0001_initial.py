# Generated by Django 5.0.6 on 2024-06-09 01:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alimento',
            fields=[
                ('alinom', models.CharField(db_column='AliNom', max_length=30, primary_key=True, serialize=False)),
                ('alicos', models.IntegerField(blank=True, db_column='AliCos', null=True)),
                ('aliinfaña', models.TextField(blank=True, db_column='AliInfAña', null=True)),
                ('aliestreg', models.CharField(blank=True, db_column='AliEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'ALIMENTO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dieta',
            fields=[
                ('diecod', models.CharField(db_column='DieCod', max_length=10, primary_key=True, serialize=False)),
                ('diefin', models.CharField(blank=True, db_column='DieFin', max_length=60, null=True)),
                ('dieotrdat', models.TextField(blank=True, db_column='DieOtrDat', null=True)),
                ('dieestreg', models.CharField(blank=True, db_column='DieEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'DIETA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlimentoTipo',
            fields=[
                ('alitipcod', models.CharField(db_column='AliTipCod', max_length=2, primary_key=True, serialize=False)),
                ('alitipdes', models.CharField(blank=True, db_column='AliTipDes', max_length=20, null=True)),
                ('aliestreg', models.CharField(blank=True, db_column='AliEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'ALIMENTO TIPO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Almacen',
            fields=[
                ('almcod', models.CharField(db_column='AlmCod', max_length=10, primary_key=True, serialize=False)),
                ('almnot', models.TextField(blank=True, db_column='AlmNot', null=True)),
                ('almestreg', models.CharField(blank=True, db_column='AlmEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'ALMACEN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('anicod', models.CharField(db_column='AniCod', max_length=10, primary_key=True, serialize=False)),
                ('anipes', models.IntegerField(blank=True, db_column='AniPes', null=True)),
                ('aniañonac', models.IntegerField(blank=True, db_column='AniAñoNac', null=True)),
                ('anipro', models.CharField(blank=True, db_column='AniPro', max_length=20, null=True)),
                ('anidesdie', models.TextField(blank=True, db_column='AniDesDie', null=True)),
                ('aniestreg', models.CharField(blank=True, db_column='AniEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'ANIMAL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnimalTipo',
            fields=[
                ('anitipcod', models.CharField(db_column='AniTipCod', max_length=2, primary_key=True, serialize=False)),
                ('aniutides', models.CharField(blank=True, db_column='AniUtiDes', max_length=20, null=True)),
                ('aniutiestreg', models.CharField(blank=True, db_column='AniUtiEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'ANIMAL TIPO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnimalUtilidad',
            fields=[
                ('aniuticod', models.CharField(db_column='AniUtiCod', max_length=1, primary_key=True, serialize=False)),
                ('aniutides', models.CharField(blank=True, db_column='AniUtiDes', max_length=20, null=True)),
                ('aniutiestreg', models.CharField(blank=True, db_column='AniUtiEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'ANIMAL UTILIDAD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CabeceraPedido',
            fields=[
                ('cabpedcod', models.CharField(db_column='CabPedCod', max_length=1, primary_key=True, serialize=False)),
                ('cabpedestreg', models.CharField(blank=True, db_column='CabPedEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'CABECERA PEDIDO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('ciucod', models.CharField(db_column='CiuCod', max_length=2, primary_key=True, serialize=False)),
                ('ciudes', models.CharField(blank=True, db_column='CiuDes', max_length=20, null=True)),
                ('ciuestreg', models.CharField(blank=True, db_column='CiuEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'CIUDAD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DetallesDePedido',
            fields=[
                ('detpedcod', models.CharField(db_column='DetPedCod', max_length=1, primary_key=True, serialize=False)),
                ('detpedhorlle', models.TimeField(blank=True, db_column='DetPedHorLle', null=True)),
                ('detpeddialle', models.IntegerField(blank=True, db_column='DetPedDiaLle', null=True)),
                ('detpedmeslle', models.IntegerField(blank=True, db_column='DetPedMesLle', null=True)),
                ('detpedañolle', models.IntegerField(blank=True, db_column='DetPedAñoLle', null=True)),
                ('detpeddes', models.TextField(blank=True, db_column='DetPedDes', null=True)),
                ('detpedestreg', models.CharField(blank=True, db_column='DetPedEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'DETALLES DE PEDIDO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FechaInicio',
            fields=[
                ('fecinicod', models.IntegerField(db_column='FecIniCod', primary_key=True, serialize=False)),
                ('fecinidia', models.IntegerField(blank=True, db_column='FecIniDia', null=True)),
                ('fecinimes', models.IntegerField(blank=True, db_column='FecIniMes', null=True)),
                ('feciniaño', models.IntegerField(blank=True, db_column='FecIniAño', null=True)),
                ('feciniestreg', models.CharField(blank=True, db_column='FecIniEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'FECHA INICIO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('empcod', models.IntegerField(db_column='EmpCod', primary_key=True, serialize=False)),
                ('empnom', models.CharField(blank=True, db_column='EmpNom', max_length=20, null=True)),
                ('detpetcod', models.CharField(blank=True, db_column='DetPetCod', max_length=1, null=True)),
            ],
            options={
                'db_table': 'EMPRESA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('estcod', models.CharField(db_column='EstCod', max_length=1, primary_key=True, serialize=False)),
                ('estdes', models.CharField(blank=True, db_column='EstDes', max_length=20, null=True)),
                ('estestreg', models.CharField(blank=True, db_column='EstEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'ESTADO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Granja',
            fields=[
                ('gracod', models.CharField(db_column='GraCod', max_length=10, primary_key=True, serialize=False)),
                ('granom', models.CharField(blank=True, db_column='GraNom', max_length=60, null=True)),
                ('gradir', models.CharField(blank=True, db_column='GraDir', max_length=60, null=True)),
                ('granot', models.TextField(blank=True, db_column='GraNot', null=True)),
                ('graestreg', models.CharField(blank=True, db_column='GraEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'GRANJA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Magnitud',
            fields=[
                ('magcod', models.CharField(db_column='MagCod', max_length=2, primary_key=True, serialize=False)),
                ('magdes', models.CharField(blank=True, db_column='MagDes', max_length=20, null=True)),
                ('magestreg', models.CharField(blank=True, db_column='MagEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'MAGNITUD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Nutriente',
            fields=[
                ('nutnom', models.CharField(db_column='NutNom', max_length=30, primary_key=True, serialize=False)),
                ('nutinfrel', models.TextField(blank=True, db_column='NutInfRel', null=True)),
                ('nutestreg', models.CharField(blank=True, db_column='NutEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'NUTRIENTE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('painom', models.CharField(db_column='PaiNom', max_length=10, primary_key=True, serialize=False)),
                ('paides', models.CharField(blank=True, db_column='PaiDes', max_length=20, null=True)),
                ('paiestreg', models.CharField(blank=True, db_column='PaiEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'PAIS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Proveedores',
            fields=[
                ('procod', models.CharField(db_column='ProCod', max_length=10, primary_key=True, serialize=False)),
                ('pronom', models.CharField(blank=True, db_column='ProNom', max_length=30, null=True)),
                ('prodir', models.CharField(blank=True, db_column='ProDir', max_length=60, null=True)),
                ('procon', models.CharField(blank=True, db_column='ProCon', max_length=8, null=True)),
                ('proinffis', models.CharField(db_column='ProInfFis', max_length=1, unique=True)),
                ('prodes', models.TextField(blank=True, db_column='ProDes', null=True)),
                ('proestreg', models.CharField(blank=True, db_column='ProEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'PROVEEDORES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Toma',
            fields=[
                ('tomcod', models.IntegerField(db_column='TomCod', primary_key=True, serialize=False)),
                ('tomnom', models.CharField(blank=True, db_column='TomNom', max_length=20, null=True)),
                ('tomhorini', models.TimeField(blank=True, db_column='TomHorIni', null=True)),
                ('tomhorfin', models.TimeField(blank=True, db_column='TomHorFin', null=True)),
                ('tomotrdat', models.TextField(blank=True, db_column='TomOtrDat', null=True)),
                ('tomestreg', models.CharField(blank=True, db_column='TomEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'TOMA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('alinom', models.OneToOneField(db_column='AliNom', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='test.alimento')),
                ('stoest', models.CharField(blank=True, db_column='StoEst', max_length=1, null=True)),
                ('stocandis', models.IntegerField(blank=True, db_column='StoCanDis', null=True)),
                ('stoestreg', models.CharField(blank=True, db_column='StoEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'STOCK',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlimentoDietaToma',
            fields=[
                ('diecod', models.OneToOneField(db_column='DieCod', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='test.dieta')),
                ('alidietomcan', models.DecimalField(blank=True, db_column='AliDieTomCan', decimal_places=2, max_digits=4, null=True)),
                ('alidietomestreg', models.CharField(blank=True, db_column='AliDieTomEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'ALIMENTO DIETA TOMA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnimalNutriente',
            fields=[
                ('anicod', models.OneToOneField(db_column='AniCod', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='test.animal')),
                ('aninutcannes', models.IntegerField(blank=True, db_column='AniNutCanNes', null=True)),
                ('aninutestreg', models.CharField(blank=True, db_column='AniNutEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'ANIMAL NUTRIENTE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DietaAnimalFechaInicio',
            fields=[
                ('dieanifecdesrel', models.TextField(blank=True, db_column='DieAniFecDesRel', null=True)),
                ('dieanifecestreg', models.CharField(blank=True, db_column='DieAniFecEstReg', max_length=1, null=True)),
                ('fecinicod', models.OneToOneField(db_column='FecIniCod', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='test.fechainicio')),
            ],
            options={
                'db_table': 'DIETA ANIMAL FECHA INICIO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NutrienteAlimento',
            fields=[
                ('nutnom', models.OneToOneField(db_column='NutNom', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='test.nutriente')),
                ('nutalicancon', models.IntegerField(blank=True, db_column='NutAliCanCon', null=True)),
                ('nutaliestreg', models.CharField(blank=True, db_column='NutAliEstReg', max_length=1, null=True)),
            ],
            options={
                'db_table': 'NUTRIENTE ALIMENTO',
                'managed': False,
            },
        ),
    ]
